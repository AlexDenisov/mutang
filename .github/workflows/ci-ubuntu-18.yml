name: CI Ubuntu 18.04

env:
  BINTRAY_REPO: "ubuntu-18"
  LLVM_RELEASE: "9.0"
  CHECK_SECRETS: ${{ secrets.BINTRAY_API_KEY }}

on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - "**"

jobs:
  test:
    name: LLVM ${{ matrix.LLVM_VERSION }}
    runs-on: ubuntu-latest
    container: ubuntu:18.04
    strategy:
      matrix:
        LLVM_VERSION: ["3.9", "4.0", "5.0", "6.0", "7.0", "8.0", "9.0"]

    steps:
      - name: Install software
        run: |
          apt-get update && apt-get install -y software-properties-common
          add-apt-repository ppa:git-core/ppa
          apt-get update && apt-get install -y python-pip curl git
          pip install ansible
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: For debugging
        run: |
          env | sort
      - name: For debugging
        run: |
          cat $GITHUB_EVENT_PATH
      - name: Set build settings
        id: settings
        run: |
          echo ::set-output name=version::`grep -Eo "MULL_VERSION [0-9.]+" CMakeLists.txt | awk ' { print $2 } '`

          case $GITHUB_EVENT_NAME in
            "pull_request")
              echo ::set-output name=suffix::-pr`grep -Eo "\"number\": [0-9]+" $GITHUB_EVENT_PATH | awk ' { print $2; exit } '`
              echo ::set-output name=package::mull-nightly
              echo ::set-output name=channel::nightly
            ;;
            "push")
              case $GITHUB_REF in
                "refs/heads/"*)
                  echo ::set-output name=suffix::-trunk`git rev-list HEAD --count`
                  echo ::set-output name=package::mull-nightly
                  echo ::set-output name=channel::nightly
                ;;
                "refs/tags/"*)
                  echo ::set-output name=suffix::""
                  echo ::set-output name=package::mull
                  echo ::set-output name=channel::stable
                  if [ `echo $GITHUB_REF | awk -F/ ' { print $3 } '` != `grep -Eo "MULL_VERSION [0-9.]+" CMakeLists.txt | awk ' { print $2 } '` ];
                  then
                    false
                  fi
                ;;
                *)
                  false
                ;;
              esac
            ;;
            *)
              false
            ;;
          esac
      - name: Patch 3.9/4.0
        if: matrix.LLVM_VERSION == '3.9' || matrix.LLVM_VERSION == '4.0'
        run: |
          ln -s /usr/include/locale.h /usr/include/xlocale.h
      - name: Run CI task
        run: |
          cd infrastructure && \
          ansible-playbook ubuntu-playbook.yaml \
            -e llvm_version="${{ matrix.LLVM_VERSION }}.0" \
            -e source_dir=$PWD/.. \
            -e gitref=$GITHUB_SHA \
            -e host=localhost \
            -e mull_version=${{ steps.settings.outputs.version }}${{ steps.settings.outputs.suffix }} \
            --verbose
      - name: Publish package
        if: matrix.LLVM_VERSION == env.LLVM_RELEASE && env.CHECK_SECRETS != null
        run: |
          curl --silent --show-error --location --request DELETE \
            --user "alexdenisov:${{ secrets.BINTRAY_API_KEY }}" \
            "https://api.bintray.com/packages/mull-project/${{ env.BINTRAY_REPO }}/${{ steps.settings.outputs.package }}/versions/${{ steps.settings.outputs.version }}${{ steps.settings.outputs.suffix }}"
          curl --silent --show-error --fail --location --request PUT \
            --upload-file infrastructure/packages/`cat infrastructure/PACKAGE_FILE_NAME`.deb \
            --user "alexdenisov:${{ secrets.BINTRAY_API_KEY }}" \
            -H "X-Bintray-Debian-Distribution: ${{ steps.settings.outputs.channel }}" \
            -H "X-Bintray-Debian-Component: main" \
            -H "X-Bintray-Debian-Architecture: amd64" \
            "https://api.bintray.com/content/mull-project/${{ env.BINTRAY_REPO }}/${{ steps.settings.outputs.package }}/${{ steps.settings.outputs.version }}${{ steps.settings.outputs.suffix }}/pool/main/m/`cat infrastructure/PACKAGE_FILE_NAME`.deb;publish=1"
